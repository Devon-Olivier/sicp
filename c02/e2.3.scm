#lang planet neil/sicp

(define (average x y )
  (/ (+ x y) 2))

(define (square x) (* x x))

(define (make-point x y)
  (cons x y))
(define (x-point P)
  (car P))
(define (y-point P)
  (cdr P))
(define (equal? P Q)
  (and (= (x-point P) (x-point Q))
       (= (y-point P) (y-point Q))))
(define (print-point P)
  (newline)
  (display "(")
  (display (x-point P))
  (display ", ")
  (display (y-point P))
  (display ")"))

(define (make-segment A B)
  (cons A B))
(define (start-point S)
  (car S))
(define (end-point S)
  (cdr S))
(define (midpoint S)
  (make-segment (average (x-point (start-point S))
                         (x-point (end-point S)))
                (average (y-point (start-point S))
                         (y-point (end-point S)))))
(define (length S)
  (sqrt (+ (square (dx S))
           (square (dy S)))))
(define (dx S)
  (- (x-point (end-point S))
     (x-point (start-point S))))
(define (dy S)
  (- (y-point (end-point S))
     (y-point (start-point S))))
(define (gradient S)
  (let ((dx (dx S)))
    (if (= dx 0)
        'infinity
        (/ (dy S) dx))))
(define (parallel? S G)
  (cond ((eq? (gradient S) 'infinity)
         (eq? (gradient G) 'infinity))
        ((eq? (gradient G) 'infinity)
         (eq? (gradient S) 'infinity))
        (else (= (gradient S) (gradient G)))))

(define (make-rectangle A B C D)
  (cons (make-segment A B) (make-segment C D)))
(define (first-segment rectangle)
  (car rectangle))
(define (second-segment rectangle)
  (make-segment (end-point (first-segment rectangle))
                (start-point (third-segment rectangle))))
(define (third-segment rectangle)
  (cdr rectangle))
(define (fourth-segment rectangle)
  (make-segment (end-point (third-segment rectangle))
                (start-point (first-segment rectangle))))
(define (perimeter rectangle)
  (* 2 (+ (length (first-segment rectangle))
          (length (second-segment rectangle)))))
(define (area rectangle)
  (* (length (first-segment rectangle))
     (length (second-segment rectangle))))



(define A (make-point 0 0))
(define B (make-point -5 12))
(define C (make-point -2 16))
(define D (make-point 3 4))
(define R (make-rectangle A B C D))

(parallel? (first-segment R) (third-segment R))
(parallel? (second-segment R) (fourth-segment R))
(length (first-segment R))
(length (second-segment R))
(perimeter R)
(area R)